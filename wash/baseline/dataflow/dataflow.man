PROCESS dataflow

SETTINGS
    DESCRIPTION = 'DATA FLOW (tentative build)'

USES
    baseline 'C:\ipak\wash\baseline\baseline'

    DATAMODEL txtFile
    FIELDS
        strDte : STRING [10]
        intYr : INTEGER [4]
        intDy, intMnth, t : INTEGER [2]
    ENDMODEL
    
INPUTFILE inTXT : txtFile ('NameDetails.txt', ASCII)
    SETTINGS
        SEPARATOR = ','
        DELIMITER = '"'

INPUTFILE inBLdata : baseline ('WASH_BLDATA', BLAISE)

OUTPUTFILE outBLdata : baseline ('', BLAISE)
    SETTINGS
        OPEN = NO
        MAKENEWFILE = NO
        RENEW = YES

OUTPUTFILE outASCIIdata : baseline ('', ASCII)
    SETTINGS
        SEPARATOR = ','
        DELIMITER = '"'
        OPEN = NO
        MAKENEWFILE = NO

AUXFIELDS
    auxYr : INTEGER [4]
    auxDy, auxMnth, z : INTEGER [2]
    strNme : STRING

MANIPULATE

    inTXT.OPEN
    inTXT.READNEXT
    auxYr:= inTXT.intYr
    auxDy:= inTXT.intDy
    auxMnth:= inTXT.intMnth

    inBLdata.OPEN
    inBLdata.READNEXT
    
    outBLdata.OPEN ('BLAISE_' + STR (auxYr) + '_' + STR (auxMnth) + '_' + STR (auxDy))
    outASCIIdata.OPEN ('ASCII_' + STR (auxYr) + '_' + STR (auxMnth) + '_' + STR (auxDy) + '.asc')
    REPEAT
        outBLdata.WRITE
        outASCIIdata.WRITE
        inBLdata.READNEXT
    UNTIL inBLdata.EOF

    {Incomplete datasets are generated by isolating WRITE commands for the two OUTPUT files. This is fixed by combining the WRITE command into one loop for both the OUTPUT files as
    above as opposed to the loop command below. I don't know why this is like this. It's as though the first WRITE command only generates comprenesive datasets - but not the second one.}

    {outASCIIdata.OPEN ('ASCII_' + STR (auxYr) + '_' + STR (auxMnth) + '_' + STR (auxDy) + '.asc')
    REPEAT
        outASCIIdata.WRITE
        inBLdata.READNEXT
    UNTIL inBLdata.EOF}
