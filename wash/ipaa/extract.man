PROCESS Extract

SETTINGS
    DESCRIPTION = 'EXTRACT (tentative build)'

USES

DATAMODEL txtFile
PRIMARY
    strDate
FIELDS
    strDate : STRING [10]
    intYear : INTEGER [4]
    intDay, intMonth, a : INTEGER [2]
ENDMODEL

OUTPUTFILE txtOut : txtFile ('NameDetails.txt', ASCII)
    SETTINGS
        SEPARATOR = ','
        DELIMITER = '"'
        OPEN = NO
        MAKENEWFILE = NO

AUXFIELDS
    btnButton : (SEEK "Seek",
                 EXIT "Exit")
    auxYear : INTEGER [4]
    auxDay, auxMonth, Reslt, i, x : INTEGER [2]
    strMonth : STRING

DIALOGBOX dlgDate "Date Dialog"
    SIZE = (300, 250)
    ESCAPE = NO
    TEXT = ('<HTML><CENTER><FONT FACE="Calibri" color="red" size="20">Enter Date', 0, 20)
    CONTROL auxYear
        FONTSIZE = 14
        POSITION = (40, 100)
        LABEL = ("Year  /", 45, 70)
    CONTROL auxMonth
        FONTSIZE = 14
        POSITION = (135, 100)
        LABEL = ("Month  /", 125, 70)
    CONTROL auxDay
        FONTSIZE = 14
        POSITION = (215, 100)
        LABEL = ("Day", 215, 70)
    BUTTON btnButton
        SIZE = (100, 50)
        VALUE = SEEK
        FONTSIZE = 16
        CAPTION = 'Seek'
    BUTTON btnButton
        SIZE = (100, 50)
        VALUE = EXIT
        FONTSIZE = 16
        CAPTION = 'Exit'

MANIPULATE
    DISPLAY ('This is a final build to illustrate data extraction in a day''s completed survey over multiple data files.'
             + '@/Please enter the date of the day''s completed survey that you wish to extract to begin.'
             + '@/Extracting more than once on a mutual date will create duplicate records in the accumulated *.bdb and ASCII file.', WAIT)
    dlgDate
    IF btnButton = SEEK THEN
        x:= 0
        IF auxMonth = 1 THEN
            strMonth:= 'January'
            FOR i:= 1 TO 99 DO
                IF auxDay < 10 THEN
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ELSE
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ENDIF
            ENDDO
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk', WAIT)
            {Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)
            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)}
        ELSEIF auxMonth = 2 THEN
            strMonth:= 'February'
            FOR i:= 1 TO 99 DO
                IF auxDay < 10 THEN
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ELSE
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ENDIF
            ENDDO
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk', WAIT)
            {Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)
            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)}
        ELSEIF auxMonth = 3 THEN
            strMonth:= 'March'
            FOR i:= 1 TO 99 DO
                IF auxDay < 10 THEN
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ELSE
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ENDIF
            ENDDO
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk', WAIT)
            {Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)
            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)}
        ELSEIF auxMonth = 4 THEN
            strMonth:= 'April'
            FOR i:= 1 TO 99 DO
                IF auxDay < 10 THEN
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ELSE
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ENDIF
            ENDDO
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk', WAIT)
            {Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)
            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)}
        ELSEIF auxMonth = 5 THEN
            strMonth:= 'May'
            FOR i:= 1 TO 99 DO
                IF auxDay < 10 THEN
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ELSE
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ENDIF
            ENDDO
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk', WAIT)
            {Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)
            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)}
        ELSEIF auxMonth = 6 THEN
            strMonth:= 'June'
            FOR i:= 1 TO 99 DO
                IF auxDay < 10 THEN
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ELSE
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ENDIF
            ENDDO
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk', WAIT)
            {Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)
            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)}
        ELSEIF auxMonth = 7 THEN
            strMonth:= 'July'
            FOR i:= 1 TO 99 DO
                IF auxDay < 10 THEN
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ELSE
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ENDIF
            ENDDO
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk', WAIT)
            {Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)
            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)}
        ELSEIF auxMonth = 8 THEN
            strMonth:= 'August'
            FOR i:= 1 TO 99 DO
                IF auxDay < 10 THEN
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ELSE
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ENDIF
            ENDDO
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk', WAIT)
            {Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)
            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)}
        ELSEIF auxMonth = 9 THEN
            strMonth:= 'September'
            FOR i:= 1 TO 99 DO
                IF auxDay < 10 THEN
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + '0' + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ELSE
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + '0' + STR(auxMonth) + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + '0' + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ENDIF
            ENDDO
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk', WAIT)
            {Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)
            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)}
        ELSEIF auxMonth = 10 THEN
            strMonth:= 'October'
            FOR i:= 1 TO 99 DO
                IF auxDay < 10 THEN
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + STR(auxMonth) + '0' + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + STR(auxMonth) + '0' + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ELSE
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + STR(auxMonth) + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + STR(auxMonth) + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ENDIF
            ENDDO
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk', WAIT)
            {Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)
            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)}
        ELSEIF auxMonth = 11 THEN
            strMonth:= 'November'
            FOR i:= 1 TO 99 DO
                IF auxDay < 10 THEN
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + STR(auxMonth) + '0' + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + STR(auxMonth) + '0' + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ELSE
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + STR(auxMonth) + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + STR(auxMonth) + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ENDIF
            ENDDO
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk', WAIT)
            {Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)
            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)}
        ELSEIF auxMonth = 12 THEN
            strMonth:= 'December'
            FOR i:= 1 TO 99 DO
                IF auxDay < 10 THEN
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + STR(auxMonth) + '0' + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name. Alternatively, you can substitute MKDIR with CREATEDIRECTORY.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + STR(auxMonth) + '0' + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + '0' + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ELSE
                    IF i < 10 THEN
                        {IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN}

                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + STR(auxMonth) + STR(auxDay) + '0' + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + '0' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + '0' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ELSE
                         IF FILEEXISTS ('\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip') THEN
                            txtOut.OPEN
                            txtOut.strDate:= STR(auxYear) + STR(auxMonth) + STR(auxDay) + STR (i)
                            txtOut.intYear:= auxYear
                            txtOut.intMonth:= auxMonth
                            txtOut.intDay:= auxDay
                            {You cannot name the variables in a similar way - hence a and i.}
                            txtOut.a:= i
                            txtOut.WRITE

                            {Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')}

                            Reslt:= RUN ('COPYFILE ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\WASH_BL' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '\' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip')
                            DISPLAY ('Netbook number: ' + STR (I) + ' has record(s) found. Will save at this location: ' + 'C:\ipak\wash\baseline\data\' + ' with this file name: ' + 'WASH_BLDATA' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip', wait)
                            {Note that you can create a folder by using the MKDIR command and specifying the path name.}
                            {WAIT is used strategically with COPYFILE, eraser1, MKDIR, wzunzip and any other command line instruction - when these commands follow each other to allow time for each to finish executing.}
                            Reslt:= RUN ('MKDIR ' + 'C:\ipak\wash\baseline\store', WAIT)

                            {In this case, WAIT doesn't have to be used as the operation is a sequence of similar COPYFILE commands.}
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bdm ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bmi ' + 'C:\ipak\wash\baseline\store\', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\baseline.bxi ' + 'C:\ipak\wash\baseline\store\', WAIT)

                            {Here, since we are transitioning from a COPYFILE to eraser1, then we have to use WAIT. It's advisable to use WAIT everywhere though as this doesn't always work.}
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\wzunzip -sgoodstuff ' + 'C:\ipak\wash\baseline\data\' + 'BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip', WAIT)

                            Reslt:= CALL ('"C:\ipak\wash\baseline\dataflow"')

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\data\BLDATAFLOW_' + STR (i) + STR (auxYear) + STR (auxMonth) + STR (auxDay) + '.zip -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\WASH_BLDATA.* -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bdm ' + 'C:\ipak\wash\baseline\baseline.bdm', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bmi ' + 'C:\ipak\wash\baseline\baseline.bmi', WAIT)
                            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\store\baseline.bxi ' + 'C:\ipak\wash\baseline\baseline.bxi', WAIT)

                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bdm -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bmi -resultsonerror -queue -method DOD_E ', WAIT)
                            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\store\baseline.bxi -resultsonerror -queue -method DOD_E ', WAIT)

                            {You can specify -file or -folder to erase.}
                            Reslt:= RUN ('C:\Blaise\eraserl -folder ' + 'C:\ipak\wash\baseline\store -resultsonerror -queue -method DOD_E ', WAIT)
                        ENDIF
                    ENDIF
                ENDIF
            ENDDO
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.bdb', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.asc', WAIT)
            Reslt:= RUN ('COPYFILE ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk ' + '\\nas-bgm\wash\WASHBENEFITSBGM\' + STR (auxYear) + '\' + strMonth + '\' + STR (auxDay) + '\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.rmk', WAIT)
            {Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'BLAISE_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)
            Reslt:= RUN ('C:\Blaise\eraserl -file ' + 'C:\ipak\wash\baseline\' + 'ASCII_' + STR (auxYear) + '_' + STR (auxMonth) + '_' + STR (auxDay) + '.* -resultsonerror -queue -method DOD_E ', WAIT)}
        ELSE
            DISPLAY ('Error!'
                     + '@/@/Please enter a valid number corresponding to a month of the calender i.e (1 - 12).'
                     + '@/Please start again.', WAIT)
        ENDIF
    ENDIF
